# Generated by Django 4.2.9 on 2025-04-01 19:49

import chaves.models
from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('is_staff', models.BooleanField(default=True, verbose_name='Membro da equipe')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', chaves.models.UsuarioManager()),
            ],
        ),
        migrations.CreateModel(
            name='Aviso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('mensagem', models.TextField()),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('ordenacao', models.IntegerField(verbose_name='Ordenação')),
            ],
            options={
                'verbose_name': 'Aviso',
                'verbose_name_plural': 'Avisos',
                'ordering': ['ordenacao'],
            },
        ),
        migrations.CreateModel(
            name='EmailConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome do destinatário', max_length=100)),
                ('email', models.EmailField(help_text='Endereço de email do destinatário', max_length=254)),
            ],
            options={
                'verbose_name': 'Destinatário',
                'verbose_name_plural': 'Destinatários',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='Polo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('polo', models.CharField(db_index=True, max_length=3, unique=True, verbose_name='Polo')),
            ],
            options={
                'verbose_name': 'Polo',
                'verbose_name_plural': 'Polos',
                'ordering': ['polo'],
            },
        ),
        migrations.CreateModel(
            name='Projetista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('projetista', models.CharField(max_length=150, verbose_name='Nome')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('email', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Projetista',
                'verbose_name_plural': 'Projetistas',
                'ordering': ['projetista'],
            },
        ),
        migrations.CreateModel(
            name='Chave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chave', models.CharField(max_length=6, unique=True, verbose_name='Número')),
                ('ns', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='Favor confirmar a NS', regex='^\\d{10}$')], verbose_name='NS')),
                ('coordenada', models.CharField(blank=True, max_length=14, null=True, validators=[django.core.validators.RegexValidator(message='Coordenada incorreta', regex='^\\d{6}:\\d{7}$')], verbose_name='Coordenada')),
                ('poste', models.CharField(blank=True, max_length=3, null=True, verbose_name='Poste/Ponto')),
                ('municipio', models.CharField(blank=True, max_length=100, null=True, verbose_name='Municipio')),
                ('chamado', models.CharField(blank=True, max_length=30, null=True, verbose_name='Chamado')),
                ('data_chamado', models.DateField(blank=True, null=True, verbose_name='Data do Chamado')),
                ('data_inclusao', models.DateTimeField(auto_now_add=True)),
                ('data_modificacao', models.DateTimeField(auto_now=True)),
                ('observacao', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('polo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='chaves.polo')),
                ('projetista', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='chaves.projetista')),
            ],
            options={
                'verbose_name': 'Chave',
                'verbose_name_plural': 'Chaves',
            },
        ),
    ]
